
##### HELP #####
#
# .maj file -- used for storing major requirements
#
# IF ANY PARENTHESIS, EXPRESSION MUST BE WRAPPED IN PARENTHESIS
# --- STRUCTURE --- 
# Please structure files in the same manner as this one to avoid complications 
# REQ = requirements to finish major 
# COURSES = course options/prequisites/corequisites
# 
# --- SYNTAX ---
# '#' is for commenting
# '$' followed by a string in single quotes '' is a comment attached to the block 
#     which is directed at the end user - really useful for complex situations or situations needing
#     the user to verify something out of our control or something that constantly changes
# '\' continues an expression to the next line
# '[COURSE_NAME]' e.g. [CMPS 101] represents the course
# 'A' = AND, 'O' = OR, 
# OBSOLETE -- WILL NOT WORK -- 'C' = COREQUISITE, meaning [PHYS 6A] C ([PHYS 6L] A [MATH 19B]) represents PHYS 6A 
#      having to be taken concurrently with PHYS 6L and MATH 19B
#
# REPLACE ALL 'C' WITH 'A', set coreq = [COURSE] in *[] definition
#
# Parenthesis, '(' and ')' only can be used in expressions
# The course entry with a '*' in front of it (e.g. *[CMPS 101]) is the course's entry for prerequisites/corequisites
# A number in front of parenthesis indicates how many courses, or groupings of courses, must be taken 
#     from within the parenthesis e.g. 2([CMPS 30] O [CMPS 31] O ([CMPS 12] A [CMPS 13]) means CMPS 30 and 31 can be
#     taken to satisfy the expression, or CMPS 31 along with CMPS 12 and CMPS 13, and so on
#
# ''' a comment to the user about the overall major would go in triple single quotes -- only one allowed '''
# var_name = var is the format for variables to be loaded 
# e.g. 
#      *[CMPS 101]
#        credits = 5
#        coreq = [COURSE NAME]
# 'E' is for electives meaning '2E' means choosing 2 electives (may leave to the user for now?)
#
################
''' From major requirement chart: Complete either: 2 Phys + Labs or 2 Chem + Labs '''
# ---- REQ ----

[CMPE TEST]


(([CMPS 12A] A [CMPS 12L]) O ([CMPS 5J] A [CMPS 11]) O ([CMPE 13] A [CMPE 13L]))
#([CMPS 12B] A [CMPS 12M]) # excluding [CMPS 13L] since it hasn't been offered
#[MATH 19A] O [MATH 20A]
#[MATH 19B] O [MATH 20B]
#[MATH 23A]
#[CMPE 16]
[AMS 10] O [MATH 21]
#([CMPE 12] A [CMPE 12L])
[CMPE 110]
[CMPS 101]
#[CMPS 104A]
#[CMPS 111]
#[CMPS 102]
#[CMPS 112]
#[CMPS 130]
#[CMPE 107 O AMS 131]
#[CMPS 104B] O [CMPS 117] O ([CMPS 161] A [CMPS 161L]) O ([CMPS 162] A [CMPS 162L]) O [CMPS 181] # capstone
#[CMPS 115] O ([CMPS 132] A [CMPS 132W]) O ([CMPS 180] A [CMPS 180W]) O [CMPS 185] O [CMPS 195] O [CMPE 185] # DC requirement
# This is going to be hard...But this format makes this manageable!
# Physics options
#((([PHYS 5A] A [PHYS 5L]) O ([PHYS 6A] A [PHYS 6L])) A ((([PHYS 5B] A [PHYS 5M]) O ([PHYS 6B] A [PHYS 6M])) O \
#([PHYS 5C] A [PHYS 5N]) O ([PHYS 6C] A [PHYS 6N]))) O \
# Chem options
#[CHEM 1A] A (([CHEM 1B] A [CHEM 1M]) O ([CHEM 1C] A [CHEM 1N]))
# Thank goodness the physical sciences part is over...
2E # may implement later
# -------------
# DOES NOT SUPPORT () A/O () in prereq
# MUST BE LIKE (...() A/O () ... [] ...) - if expression has parenthesis, there must be a surrounding pair
# -- COURSES --
*[CMPS 12A]
  credits = 5
  coreq = [CMPS 12L]
  # if there was a coreq then
  # coreq = [course]
  # or
  # coreq = [course a],[course b]
  $ 'Please check placement requirements and prerequisites for this course.'
*[CMPS 12L]
  credits = 2
  coreq = [CMPS 12A]

*[CMPS 5J]

*[CMPE TEST]

*[CMPS 11]

*[CMPE 13]

*[CMPE 110]

*[CMPE 13L]

*[AMS 10]

*[MATH 21]

*[CMPS 101]
  credits = 5
  #(([CMPS 12A] A [CMPS 12L]) O ([CMPS 5J] A [CMPS 11]) O ([CMPE 13] A [CMPE 13L]))
  #[CMPS 12B] # can leave out 12M since it was a coreq to 12B, also excluding CMPS 13
  #[CMPE 16]
  #[MATH 19B]
  #[AMS 10] O [MATH 21] O [MATH 22] O [MATH 23A]
  #2([AMS 102] O [MATH 212] O ([MATH 222226] O [MATH 22242344] O [ce 3] O 9([ce 2] A [C3 3])))
  #2([CS 999] O [CS 777] ([CM 123] O [CM 7888]) O [CS b] O ([a a] A [b b]) O [CS 5] O ([CS 889] A [C4 adf]))

# courses must have some kind of info in them to work, even if just a dummy variable
*[TEST]
  #3([CM TEST] A ([CE TEST] O [CP TEST] O ([CE] O [CMM])) A [77777] A ([77] A [77777777777]) A [end1] A [end2])
  credits = 10