
##### HELP #####
#
# .maj file -- used for storing major requirements
# This file has enough entries for examples, but cannot be used in practice.
# Please see other .maj files for further examples
#
# 
# --- STRUCTURE --- 
# Please structure files in the same manner as this one to avoid complications
#
# REQ = requirements to finish major
#
# COURSES = info for each course
#       Entries under -- COURSES --
#       Course entry begins with *[COURSE NAME]
#       COURSE SYNTAX
#           '$' followed by a string in single quotes '' is a comment attached to the block
#                   which is directed at the end user
#           VARIABLES:
#               NOTE: ALL VARIABLES ARE LOWERCASE, not all variables are required. Framework will use them if they exist
#
#               var_name = value  -- stores course variables
#                Supported variables:
#                    units = #
#                    credits = #   -- can use units or credits. Be consistent per university
#                    coreq = [COURSE], [OPTIONAL COURSE] -- corequisite
#                    blacklist = [],[],[] -- courses which make course entry ineligible for credit towards major
#                    lower_div_only = True
#                    upper_div_only = False     -- upper div students only
#                    do_not_take = True         -- only variable needed for blacklisted courses
#                                               -- remember that all courses mentioned in this file MUST have a
#                                                  course entry *[], blacklisted ones need only this variable
#                    id_# = total_that_can_be_taken_for_credit
#                        e.g.   id_1 = 2 means a total of 2 courses with this variable can be taken for credit towards
#                                        major
#                               id_2 = 5 (can coexist with above since it's a different id) means a total of 5 courses
#                                        can be taken for credit towards major
#
#                    TODO: implement all of this, document all future variables added
#
#                    TEST SCORES EQUATING TO COURSES:
#                       Supported tests (will add more):
#                           ap_calculus_ab = minimum score
#                           ap_calculus_bc = 3
#                           act_math = 29
#                           sat_math = 450
#
#
#

# --- GENERAL SYNTAX ---
# '#' is for commenting
# '\' continues an expression to the next line
# '[COURSE_NAME]' e.g. [CMPS 101] represents the course
# 'A' = AND, 'O' = OR,
# Parenthesis, '(' and ')' can be used in requirement or prereq expressions.
#   NOTE: two sets of parenthesis e.g. () O () must be wrapped in parenthesis to form one expression like (() A ())
# A number in front of parenthesis indicates how many courses, or groupings of courses, must be taken 
#     from within the parenthesis e.g. 2([CMPS 30] O [CMPS 31] O ([CMPS 12] A [CMPS 13])) means CMPS 30 and 31 can be
#     taken to satisfy the expression, or CMPS 31 along with CMPS 12 and CMPS 13, and so on. Default is 1()
#
# ''' a comment to the user about the overall major would go in triple single quotes at the top of the file
#       -- only one allowed -- must be only text on line(s) '''
#
# 'E' for now is for electives meaning '2E' means choosing 2 electives (may leave to the user for now?)
#   NOTE: This format will change. Line may contain additional requirements such as electives must be
#         from upper div CS, etc.
#
################


''' From major requirement chart: Complete either: 2 Phys + Labs or 2 Chem + Labs '''

# ---- REQ ----

# all entries here must have a course entry (*[]) below, under '-- COURSES --'

[CMPS 112]
[CMPS 130]
[CMPE 107 O AMS 131]
# NOTE:
#   ([TEST A] O [TEST B]) O ([TEST C] A [TEST D]) is INVALID. Please wrap stuff like this in parenthesis like:
#   (([TEST A] O [TEST B]) O ([TEST C] A [TEST D]))
#
#   Notice how in a text editor, the very first and last parenthesis now pair to each other

([CMPS 104B] O [CMPS 117] O ([CMPS 161] O [CMPS 161B]) O ([CMPS 162] A [CMPS 162L]) O [CMPS 181])


2E # may implement later
# -------------

# -- COURSES --

# courses must have some kind of info in them

*[CMPS 12A]
  credits = 5
  coreq = [CMPS 12L]
  blacklist = [TEST COURSE1]
  $ 'Please check placement requirements and prerequisites for this course.'
*[CMPS 12L]
  credits = 2
  coreq = [CMPS 12A]
*[TEST COURSE]
  units = 4 # can use units or credits, just be consistent according to university
  ([AMS 10] O [MATH 21] O [MATH 22] O [MATH 23A])
# blacklisted items
*[TEST COURSE1]
  do_not_take = True
